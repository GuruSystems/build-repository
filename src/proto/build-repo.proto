
syntax = "proto3";

package buildrepo;

import "google/api/annotations.proto";
/*
import "google/protobuf/empty.proto";
import "google/protobuf/duration.proto";
import "examples/sub/message.proto";
import "examples/sub2/message.proto";
import "google/protobuf/timestamp.proto";
*/
message CreateBuildRequest {
 string Repository = 1;
 string CommitID = 2;
 string Branch = 3;
 uint64 BuildID = 4;
 string CommitMSG = 5;
}

message CreateBuildResponse {
 string BuildStoreid=1;
}

message UploadSlotRequest {
string BuildStoreid=1;
string Filename=2;
}
message UploadSlotResponse {
string Token=1;
int32 Port = 2;
}

message UploadDoneRequest {
string BuildStoreid=1;
}
message UploadDoneResponse {}

message RepoEntry{
string Name=1;
int32 Type=2;
}
message ListReposRequest{
}
message ListReposResponse{
repeated RepoEntry Entries=1;
}

message ListBranchesRequest {
string Repository =1;
}
message ListBranchesResponse {
repeated RepoEntry Entries=1;
}

message ListVersionsRequest {
string Repository=1;
string Branch =2;
}
message ListVersionsResponse {
repeated RepoEntry Entries=1;
}
message ListFilesRequest {
string Repository=1;
string Branch =2;
string Version=3;
}
message ListFilesResponse {
repeated RepoEntry Entries=1;
}
message GetLatestVersionRequest {
string Repository=1;
string Branch=2;
}
message GetLatestVersionResponse {
uint64 BuildID=1;
}

message GetBlockRequest {
File file=1;
uint64 Offset=2;
uint32 Size=3; // grpc transport limit: max 32k !
}

message GetBlockResponse {
File file=1;
uint64 Offset=2;
uint32 Size=3; // grpc transport limit: max 32k !
bytes Data=4;
}

// identify a unique file
message File {
string Repository=1;
string Branch=2;
uint64 BuildID=3;
string Filename=4;
}

message GetMetaRequest {
File file=1;
}
message GetMetaResponse {
File file=1;
uint64 Size=2;
}
service BuildRepoManager {
 rpc CreateBuild(CreateBuildRequest) returns (CreateBuildResponse);
 rpc GetUploadSlot(UploadSlotRequest) returns (UploadSlotResponse);
 rpc UploadsComplete(UploadDoneRequest) returns (UploadDoneResponse);
 rpc ListRepos(ListReposRequest) returns (ListReposResponse);
 rpc ListBranches(ListBranchesRequest) returns (ListBranchesResponse);
 rpc ListVersions(ListVersionsRequest) returns (ListVersionsResponse);
 rpc ListFiles(ListFilesRequest) returns (ListFilesResponse);
 rpc GetLatestVersion(GetLatestVersionRequest) returns (GetLatestVersionResponse);
 rpc GetBlock(GetBlockRequest) returns (GetBlockResponse);
 rpc GetFileMetaData(GetMetaRequest) returns (GetMetaResponse);
}